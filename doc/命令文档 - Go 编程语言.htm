<!DOCTYPE html>
<!-- saved from url=(0025)https://go-zh.org/doc/cmd -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<!--
  <title>命令文档 - The Go Programming Language</title>
-->
  <title>命令文档 - Go 编程语言</title>

<link type="text/css" rel="stylesheet" href="./命令文档 - Go 编程语言_files/style.css">

<link rel="stylesheet" href="./命令文档 - Go 编程语言_files/jquery.treeview.css">
<script async="" src="https://www.google-analytics.com/analytics.js"></script><script type="text/javascript">window.initFuncs = [];</script>
</head>
<body>

<div id="lowframe" style="position: fixed; bottom: 0; left: 0; height: 0; width: 100%; border-top: thin solid grey; background-color: white; overflow: auto;">
...
</div><!-- #lowframe -->

<div id="topbar" class="wide"><div class="container">

<form method="GET" action="https://go-zh.org/search">
<div id="menu" style="min-width: 650px;">
<!--
<a href="/doc/">Documents</a>
<a href="/pkg/">Packages</a>
<a href="/project/">The Project</a>
<a href="/help/">Help</a>
<a href="/blog/">Blog</a>
-->
<a href="https://go-zh.org/doc/">文档</a>
<a href="https://go-zh.org/pkg/">包</a>
<a href="https://go-zh.org/project/">项目</a>
<a href="https://go-zh.org/help/">帮助</a>
<a href="https://go-zh.org/blog/">博客</a>

<!--
<a id="playgroundButton" href="http://play.golang.org/" title="Show Go Playground">Play</a>
-->
<a id="playgroundButton" href="http://play.golang.org/" title="显示 Go 操场" style="display: inline;">运行</a>

<!--
<input type="text" id="search" name="q" class="inactive" value="Search" placeholder="Search">
-->
<input type="text" id="search" name="q" class="inactive" value="搜索" placeholder="搜索">
</div>
<!--
<div id="heading"><a href="/">The Go Programming Language</a></div>
-->
<div id="heading"><a href="https://go-zh.org/">Go 编程语言</a></div>
</form>

</div></div>


<div id="playground" class="play">
	<div class="input"><textarea class="code">package main

import "fmt"

func main() {
	fmt.Println("Hello, 世界")
}</textarea></div>
	<div class="output"></div>
	<div class="buttons">
<!--
		<a class="run" title="Run this code [shift-enter]">Run</a>
		<a class="fmt" title="Format this code">Format</a>
		<a class="share" title="Share this code">Share</a>
-->
		<a class="run" title="运行此代码[Shift-Enter]">运行</a>
		<a class="fmt" title="格式化此代码">格式化</a>
		<a class="share" title="分享此代码">分享</a>
	</div>
</div>


<div id="page" class="wide" tabindex="-1" style="outline: 0px;">
<div class="container">


  <h1>命令文档</h1>




<div id="nav"></div>




<!--{
	"Title": "Command Documentation",
	"Path":  "/doc/cmd"
}-->

<div class="english">
<p>
There is a suite of programs to build and process Go source code.
Instead of being run directly, programs in the suite are usually invoked
by the <a href="https://go-zh.org/cmd/go/">go</a> program.
</p>
</div>

<p>
这是一组用来构建并处理 Go 源码的程序套件。本套件中的程序并不直接运行，而是通过
<a href="https://go-zh.org/cmd/go/">go</a> 程序来调用。
</p>

<div class="english">
<p>
The most common way to run these programs is as a subcommand of the go program,
for instance as <code>go fmt</code>. Run like this, the command operates on
complete packages of Go source code, with the go program invoking the
underlying binary with arguments appropriate to package-level processing.
</p>
</div>

<p>
运行这些程序最普通的方式就是作为 go 程序的子命令，例如 <code>go fmt</code>。若像这样运行，
该命令就会在Go源码的完整包上进行操作，它使用 go 程序通过适当的实参来调用基本的二进制程序以进行包级处理。
</p>

<div class="english">
<p>
The programs can also be run as stand-alone binaries, with unmodified arguments,
using the go <code>tool</code> subcommand, such as <code>go tool vet</code>.
This style of invocation allows, for instance, checking a single source file
rather than an entire package: <code>go tool vet myprogram.go</code> as
compared to <code>go vet mypackage</code>.
Some of the commands, such as <code>yacc</code>, are accessible only through
the go <code>tool</code> subcommand.
</p>
</div>

<p>
也可作为独立的二进制程序，加上未修改的实参，并使用 go 的 <code>tool</code>
子命令来运行，例如 <code>go tool vet</code>。以下调用风格也是允许的，例如，
检查单个源文件而非整个包：<code>go tool vet myprogram.go</code>
对比于 <code>go vet mypackage</code>。
有一些命令，如 <code>yacc</code>，只能通过 go 的 <code>tool</code> 子命令来访问。
</p>

<div class="english">
<p>
Finally the <code>fmt</code> and <code>godoc</code> commands are installed
as regular binaries called <code>gofmt</code> and <code>godoc</code> because
they are so often referenced.
</p>
</div>

<p>
最后，<code>fmt</code> 与 <code>doc</code> 两个命令也作为常规的二进制被安装为
<code>gofmt</code> 和 <code>godoc</code>，因为它们偶尔会被引用。
</p>

<div class="english">
<p>
Click on the links for more documentation, invocation methods, and usage details.
</p>
</div>

<p>
欲获取更多文档、调用方法及用法详述，请点击以下链接。
</p>

<div class="english">
<table class="dir">
<tbody><tr>
<th>Name</th>
<th>&nbsp;&nbsp;&nbsp;&nbsp;</th>
<th>Synopsis</th>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/go/">go</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>
The <code>go</code> program manages Go source code and runs the other
commands listed here.
See the command docs for usage
details.
<br><br>
</td>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/cgo/">cgo</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Cgo enables the creation of Go packages that call C code.</td>
</tr>

<tr>
<td><a href="https://godoc.org/golang.org/x/tools/cmd/cover/">cover</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Cover is a program for creating and analyzing the coverage profiles
generated by <code>"go test -coverprofile"</code>.</td>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/fix/">fix</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Fix finds Go programs that use old features of the language and libraries
and rewrites them to use newer ones.</td>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/go/">fmt</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Fmt formats Go packages, it is also available as an independent <a href="https://go-zh.org/cmd/gofmt/">
gofmt</a> command with more general options.</td>
</tr>

<tr>
<td><a href="https://godoc.org/golang.org/x/tools/cmd/godoc/">godoc</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Godoc extracts and generates documentation for Go packages.</td>
</tr>

<tr>
<td><a href="https://godoc.org/golang.org/x/tools/cmd/vet/">vet</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Vet examines Go source code and reports suspicious constructs, such as Printf
calls whose arguments do not align with the format string.</td>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/yacc/">yacc</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Yacc is a version of yacc that generates parsers implemented in Go.</td>
</tr>

</tbody></table>
</div>

<table class="dir">
<tbody><tr>
<th>名称</th>
<th>&nbsp;&nbsp;&nbsp;&nbsp;</th>
<th>简介</th>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/go/">go</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>
<code>go</code> 程序管理 Go 源码以及运行其它在此列出的命令。用法详述见命令文档。
<br><br>
</td>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/cgo/">cgo</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Cgo 使 Go 包的创建能够调用 C 代码。</td>
</tr>

<tr>
<td><a href="http://godoc.org/code.google.com/p/go.tools/cmd/cover/">cover</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Cover 用于创建并优化由 <code>"go test -coverprofile"</code> 生成的规模评估。</td>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/fix/">fix</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Fix 发现使用旧语言与库特性的 Go 程序，并使用较新的特性来重写它们。</td>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/go/">fmt</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Fmt 格式化 Go 包，它作为独立的<a href="https://go-zh.org/cmd/gofmt/">gofmt</a>命令，使用更一般的选项同样有效。</td>
</tr>

<tr>
<td><a href="http://godoc.org/code.google.com/p/go.tools/cmd/godoc/">godoc</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Godoc 从 Go 包中提取并生成文档。</td>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/vet/">vet</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Vet 检查 Go 源码并报告可疑的构造，例如 Printf 调用的实参数与格式化字符串不匹配。</td>
</tr>

<tr>
<td><a href="https://go-zh.org/cmd/yacc/">yacc</a></td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td>Yacc 是 yacc 的一个版本，它生成在 Go 中实现的解析器。</td>
</tr>
</tbody></table>

<div class="english">
<p>
This is an abridged list. See the <a href="https://go-zh.org/cmd/">full command reference</a>
for documentation of the compilers and more.
</p>
</div>

<p>
这是一个简略的列表。编译器及更多文档见<a href="https://go-zh.org/cmd/">完整的命令参考</a>
</p>


<!--
<div id="footer">
Build version devel +f22911f Thu Apr 16 05:55:22 2015 +0000.<br>
Except as <a href="https://developers.google.com/site-policies#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> |
<a href="http://www.google.com/intl/en/policies/privacy/">Privacy Policy</a>
</div>
-->
<div id="footer">
构建版本 devel +f22911f Thu Apr 16 05:55:22 2015 +0000.<br>
除<a href="http://code.google.com/policies.html#restrictions">特别注明</a>外，
本页内容均采用知识共享-署名（CC-BY）3.0协议授权，代码采用<a href="https://go-zh.org/LICENSE">BSD协议</a>授权。<br>
<a href="https://go-zh.org/doc/tos.html">服务条款</a> |
<a href="http://www.google.com/intl/en/policies/privacy/">隐私政策</a>
</div>

</div><!-- .container -->
</div><!-- #page -->

<!-- TODO(adonovan): load these from <head> using "defer" attribute? -->
<script type="text/javascript" src="./命令文档 - Go 编程语言_files/jquery.js"></script>
<script type="text/javascript" src="./命令文档 - Go 编程语言_files/jquery.treeview.js"></script>
<script type="text/javascript" src="./命令文档 - Go 编程语言_files/jquery.treeview.edit.js"></script>


<script type="text/javascript" src="./命令文档 - Go 编程语言_files/playground.js"></script>

<script type="text/javascript" src="./命令文档 - Go 编程语言_files/godocs.js"></script>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-58705693-2', 'auto');
  ga('send', 'pageview');
</script>




</body></html>